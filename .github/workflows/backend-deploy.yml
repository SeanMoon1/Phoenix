name: Backend Deploy to EC2

on:
  push:
    branches: ["main"]
    paths:
      - "Backend/**" # Backend 폴더 변경 시에만 실행
  workflow_dispatch: # 수동 실행 가능
  workflow_call: # 재사용 가능한 워크플로우로 호출 가능

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.BACK_HOST }}
          username: ${{ secrets.BACK_USER }}
          key: ${{ secrets.BACK_SSH_KEY }}
          port: 22
          envs: |
            NODE_ENV=production
            PORT=3000
            CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}
            API_URL=${{ secrets.API_URL }}
            FRONTEND_URL=${{ secrets.FRONTEND_URL }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_DATABASE=${{ secrets.DB_DATABASE }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            NAVER_CLIENT_ID=${{ secrets.NAVER_CLIENT_ID }}
            NAVER_CLIENT_SECRET=${{ secrets.NAVER_CLIENT_SECRET }}
            KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}
            KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION=${{ secrets.AWS_REGION }}
          script: |
            # 애플리케이션 디렉토리로 이동
            cd /home/ubuntu/Phoenix

            # 기존 프로세스 중지
            pm2 stop phoenix-backend || true

            # 최신 코드 가져오기
            git fetch origin
            git reset --hard origin/main

            # Backend 디렉토리로 이동
            cd Backend

            # .env 파일 생성 (환경변수 주입)
            cat > .env << EOF
            NODE_ENV=production
            PORT=3000
            CORS_ORIGIN=$CORS_ORIGIN
            API_URL=$API_URL
            FRONTEND_URL=$FRONTEND_URL
            DB_HOST=$DB_HOST
            DB_PORT=3306
            DB_USERNAME=$DB_USERNAME
            DB_PASSWORD=$DB_PASSWORD
            DB_DATABASE=$DB_DATABASE
            JWT_SECRET=$JWT_SECRET
            JWT_EXPIRES_IN=7d
            GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID
            GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
            GOOGLE_CALLBACK_URL=$API_URL/auth/google/callback
            NAVER_CLIENT_ID=$NAVER_CLIENT_ID
            NAVER_CLIENT_SECRET=$NAVER_CLIENT_SECRET
            NAVER_CALLBACK_URL=$API_URL/auth/naver/callback
            KAKAO_CLIENT_ID=$KAKAO_CLIENT_ID
            KAKAO_CLIENT_SECRET=$KAKAO_CLIENT_SECRET
            KAKAO_CALLBACK_URL=$API_URL/auth/kakao/callback
            AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            AWS_REGION=$AWS_REGION
            LOG_LEVEL=info
            EOF

            # Rollup 의존성 문제 해결을 위한 정리 후 설치
            rm -rf node_modules package-lock.json
            npm install --only=production

            # TypeScript 빌드
            npm run build

            # 데이터베이스 마이그레이션 실행 (필요한 경우)
            npm run migration:run || true

            # PM2로 애플리케이션 시작/재시작
            pm2 start ecosystem.config.js || pm2 restart phoenix-backend

            # PM2 프로세스 저장
            pm2 save

            # 헬스체크
            sleep 10
            curl -f http://localhost:3000/health || exit 1

            echo "✅ Backend deployment completed successfully!"

      - name: Deployment Status Check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.BACK_HOST }}
          username: ${{ secrets.BACK_USER }}
          key: ${{ secrets.BACK_SSH_KEY }}
          script: |
            echo "📊 PM2 Status:"
            pm2 status
            echo "🔍 Application Logs (last 20 lines):"
            pm2 logs phoenix-backend --lines 20 --nostream
