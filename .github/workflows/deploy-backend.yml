name: Deploy Backend to AWS Lambda

on:
  push:
    branches: [main]
    paths:
      - 'Backend/**'
      - '.github/workflows/deploy-backend.yml'
  pull_request:
    branches: [main]
    paths:
      - 'Backend/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: Backend/package-lock.json

      - name: Install dependencies
        working-directory: ./Backend
        run: npm ci

      - name: Run tests
        working-directory: ./Backend
        run: npm test
        env:
          NODE_ENV: test

      - name: Build application
        working-directory: ./Backend
        run: npm run build

      - name: Install Serverless Framework
        run: npm install -g serverless

      - name: Deploy to AWS Lambda
        working-directory: ./Backend
        run: serverless deploy --stage production
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          AMPLIFY_DOMAIN: ${{ secrets.AMPLIFY_DOMAIN }}
          DB_SECURITY_GROUP_ID: ${{ secrets.DB_SECURITY_GROUP_ID }}
          DB_SUBNET_ID_1: ${{ secrets.DB_SUBNET_ID_1 }}
          DB_SUBNET_ID_2: ${{ secrets.DB_SUBNET_ID_2 }}

      - name: Run database migrations
        working-directory: ./Backend
        run: serverless invoke --function api --data '{"httpMethod": "POST", "path": "/migrate", "body": "{}"}'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
