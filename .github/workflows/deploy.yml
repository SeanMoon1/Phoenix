name: Deploy Phoenix

on:
  push:
    branches:
      - main   # main 브랜치에 push될 때 실행

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.BACK_SSH_KEY }}

      - name: Deploy Backend
        env:
          APP_NAME: ${{ secrets.APP_NAME }}
          APP_VERSION: ${{ secrets.APP_VERSION }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          PORT: ${{ secrets.PORT }}

          CORS_ORIGIN: ${{ secrets.CORS_ORIGIN }}
          API_URL: ${{ secrets.API_URL }}
          FRONTEND_URL: ${{ secrets.FRONTEND_URL }}

          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}

          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN }}

          OAUTH_REDIRECT_BASE: ${{ secrets.OAUTH_REDIRECT_BASE }}
          OAUTH_SUCCESS_REDIRECT: ${{ secrets.OAUTH_SUCCESS_REDIRECT }}
          OAUTH_FAILURE_REDIRECT: ${{ secrets.OAUTH_FAILURE_REDIRECT }}

          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_CALLBACK_URL: ${{ secrets.GOOGLE_CALLBACK_URL }}
          GOOGLE_CALLBACK_PATH: ${{ secrets.GOOGLE_CALLBACK_PATH }}

          NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
          NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}
          NAVER_CALLBACK_URL: ${{ secrets.NAVER_CALLBACK_URL }}
          NAVER_CALLBACK_PATH: ${{ secrets.NAVER_CALLBACK_PATH }}
          NAVER_SERVICE_URL: ${{ secrets.NAVER_SERVICE_URL }}

          KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
          KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
          KAKAO_CALLBACK_URL: ${{ secrets.KAKAO_CALLBACK_URL }}
          KAKAO_CALLBACK_PATH: ${{ secrets.KAKAO_CALLBACK_PATH }}

          INITIAL_ADMIN_LOGIN_ID: ${{ secrets.INITIAL_ADMIN_LOGIN_ID }}
          INITIAL_ADMIN_PASSWORD: ${{ secrets.INITIAL_ADMIN_PASSWORD }}
          INITIAL_ADMIN_NAME: ${{ secrets.INITIAL_ADMIN_NAME }}
          INITIAL_ADMIN_EMAIL: ${{ secrets.INITIAL_ADMIN_EMAIL }}
          INITIAL_ADMIN_PHONE: ${{ secrets.INITIAL_ADMIN_PHONE }}

          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_SES_FROM_EMAIL: ${{ secrets.AWS_SES_FROM_EMAIL }}
          AWS_SES_TO_EMAIL: ${{ secrets.AWS_SES_TO_EMAIL }}

          LOG_LEVEL: ${{ secrets.LOG_LEVEL }}
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.BACK_USER }}@${{ secrets.BACK_HOST }} << 'EOF'
            cd /home/ubuntu/apps/Phoenix/Backend

            # ✅ .env 파일 작성 (echo 방식)
            echo "APP_NAME=${APP_NAME}" > .env
            echo "APP_VERSION=${APP_VERSION}" >> .env
            echo "NODE_ENV=${NODE_ENV}" >> .env
            echo "PORT=${PORT}" >> .env

            echo "CORS_ORIGIN=${CORS_ORIGIN}" >> .env
            echo "API_URL=${API_URL}" >> .env
            echo "FRONTEND_URL=${FRONTEND_URL}" >> .env

            echo "DB_HOST=${DB_HOST}" >> .env
            echo "DB_PORT=${DB_PORT}" >> .env
            echo "DB_USERNAME=${DB_USERNAME}" >> .env
            echo "DB_PASSWORD=${DB_PASSWORD}" >> .env
            echo "DB_DATABASE=${DB_DATABASE}" >> .env

            echo "JWT_SECRET=${JWT_SECRET}" >> .env
            echo "JWT_EXPIRES_IN=${JWT_EXPIRES_IN}" >> .env

            echo "OAUTH_REDIRECT_BASE=${OAUTH_REDIRECT_BASE}" >> .env
            echo "OAUTH_SUCCESS_REDIRECT=${OAUTH_SUCCESS_REDIRECT}" >> .env
            echo "OAUTH_FAILURE_REDIRECT=${OAUTH_FAILURE_REDIRECT}" >> .env

            echo "GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}" >> .env
            echo "GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}" >> .env
            echo "GOOGLE_CALLBACK_URL=${GOOGLE_CALLBACK_URL}" >> .env
            echo "GOOGLE_CALLBACK_PATH=${GOOGLE_CALLBACK_PATH}" >> .env

            echo "NAVER_CLIENT_ID=${NAVER_CLIENT_ID}" >> .env
            echo "NAVER_CLIENT_SECRET=${NAVER_CLIENT_SECRET}" >> .env
            echo "NAVER_CALLBACK_URL=${NAVER_CALLBACK_URL}" >> .env
            echo "NAVER_CALLBACK_PATH=${NAVER_CALLBACK_PATH}" >> .env
            echo "NAVER_SERVICE_URL=${NAVER_SERVICE_URL}" >> .env

            echo "KAKAO_CLIENT_ID=${KAKAO_CLIENT_ID}" >> .env
            echo "KAKAO_CLIENT_SECRET=${KAKAO_CLIENT_SECRET}" >> .env
            echo "KAKAO_CALLBACK_URL=${KAKAO_CALLBACK_URL}" >> .env
            echo "KAKAO_CALLBACK_PATH=${KAKAO_CALLBACK_PATH}" >> .env

            echo "INITIAL_ADMIN_LOGIN_ID=${INITIAL_ADMIN_LOGIN_ID}" >> .env
            echo "INITIAL_ADMIN_PASSWORD=${INITIAL_ADMIN_PASSWORD}" >> .env
            echo "INITIAL_ADMIN_NAME=${INITIAL_ADMIN_NAME}" >> .env
            echo "INITIAL_ADMIN_EMAIL=${INITIAL_ADMIN_EMAIL}" >> .env
            echo "INITIAL_ADMIN_PHONE=${INITIAL_ADMIN_PHONE}" >> .env

            echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" >> .env
            echo "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" >> .env
            echo "AWS_REGION=${AWS_REGION}" >> .env
            echo "AWS_SES_FROM_EMAIL=${AWS_SES_FROM_EMAIL}" >> .env
            echo "AWS_SES_TO_EMAIL=${AWS_SES_TO_EMAIL}" >> .env

            echo "LOG_LEVEL=${LOG_LEVEL}" >> .env

            # ✅ 빌드 & 재시작
            git pull origin main
            npm install
            npm run build
            pm2 restart phoenix-backend || pm2 start dist/src/main.js --name phoenix-backend
          EOF

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.FRONT_SSH_KEY }}

      - name: Deploy Frontend
        env:
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
          VITE_SCENARIO_DATA_SOURCE: ${{ secrets.VITE_SCENARIO_DATA_SOURCE }}
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.FRONT_USER }}@${{ secrets.FRONT_HOST }} << 'EOF'
            cd /home/ubuntu/apps/Phoenix/Frontend

            # ✅ .env.production 작성
            echo "VITE_API_BASE_URL=${VITE_API_BASE_URL}" > .env.production
            echo "VITE_SCENARIO_DATA_SOURCE=${VITE_SCENARIO_DATA_SOURCE}" >> .env.production

            # ✅ 빌드 & 배포
            git pull origin main
            npm install
            npm run build
            sudo systemctl restart nginx
          EOF
